-- Ensure getgenv() is used so the WebhookURL is globally accessible
getgenv().WebhookURL = getgenv().WebhookURL or "YOUR_WEBHOOK_URL_HERE"

-- Function to send a webhook message
local function webhookmessage(data1, link)
    local HttpService = game:GetService("HttpService")

    local response = http_request({
        Url = link,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode(data1)
    })

    print(response.Success)
end

-- Function to update player stats and send them to the webhook
local function updatePlayerStatsAndSendWebhook(player)
    local playerStats = game.ReplicatedStorage:FindFirstChild("Datas"):FindFirstChild(tostring(player.UserId))
    if playerStats then
        -- Fetch stats
        local strengthStat = playerStats:FindFirstChild("Strength") and playerStats.Strength.Value or math.huge
        local defenceStat = playerStats:FindFirstChild("Defense") and playerStats.Defense.Value or math.huge
        local energyStat = playerStats:FindFirstChild("Energy") and playerStats.Energy.Value or math.huge
        local speedStat = playerStats:FindFirstChild("Speed") and playerStats.Speed.Value or math.huge

        -- Prepare the data for the webhook message
        local currentworld = ""
        if game.PlaceId == 5151400895 then
            currentworld = "Bills"
        else
            currentworld = "Earth"
        end

        -- Webhook message data including stats
        local data1 = {
            ["content"] = "",
            ["embeds"] = {{
                ["title"] = "Stat Farm - " .. player.Name,
                ["description"] = "Planet: **" .. currentworld .. "**\n" ..
                                  "Strength: **" .. strengthStat .. "**\n" ..
                                  "Defense: **" .. defenceStat .. "**\n" ..
                                  "Energy: **" .. energyStat .. "**\n" ..
                                  "Speed: **" .. speedStat .. "**",
                ["color"] = 6248703,
                ["footer"] = {
                    ["text"] = "v0.1",
                    ["icon_url"] = "https://cdn.discordapp.com/attachments/1294895323852050475/1295927395018215486/newid.png"
                },
                ["thumbnail"] = {
                    ["url"] = "https://tr.rbxcdn.com/180DAY-fa4640ea47b1096f1be0d0ecb3e58ba9/768/432/Image/Webp/noFilter"
                }
            }},
            ["username"] = "webhook testing",
            ["avatar_url"] = "https://cdn.discordapp.com/attachments/1294895323852050475/1295927395018215486/newid.png",
            ["attachments"] = {}
        }

        -- Send the webhook message with stats
        local HttpService = game:GetService("HttpService")

        local response = http_request({
            Url = getgenv().WebhookURL,  -- Using the URL from the getgenv() table
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(data1)
        })

        print(response.Success)
    end
end

-- Example of calling the function for the LocalPlayer
pcall(function() updatePlayerStatsAndSendWebhook(game.Players.LocalPlayer) end)
